/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { EntryPoint, EntryPointInterface } from "../EntryPoint";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "preOpGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "paid",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "validAfter",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "validUntil",
        type: "uint48",
      },
      {
        internalType: "bool",
        name: "targetSuccess",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "targetResult",
        type: "bytes",
      },
    ],
    name: "ExecutionResult",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "opIndex",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "FailedOp",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAddressResult",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "SignatureValidationFailed",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sigFailed",
            type: "bool",
          },
          {
            internalType: "uint48",
            name: "validAfter",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "validUntil",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "paymasterContext",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.ReturnInfo",
        name: "returnInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "senderInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "factoryInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "paymasterInfo",
        type: "tuple",
      },
    ],
    name: "ValidationResult",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sigFailed",
            type: "bool",
          },
          {
            internalType: "uint48",
            name: "validAfter",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "validUntil",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "paymasterContext",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.ReturnInfo",
        name: "returnInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "senderInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "factoryInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "paymasterInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "aggregator",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "stake",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "unstakeDelaySec",
                type: "uint256",
              },
            ],
            internalType: "struct IStakeManager.StakeInfo",
            name: "stakeInfo",
            type: "tuple",
          },
        ],
        internalType: "struct IEntryPoint.AggregatorStakeInfo",
        name: "aggregatorInfo",
        type: "tuple",
      },
    ],
    name: "ValidationResultWithAggregation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
    ],
    name: "AccountDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalDeposit",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "SignatureAggregatorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalStaked",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "unstakeDelaySec",
        type: "uint256",
      },
    ],
    name: "StakeLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "withdrawTime",
        type: "uint256",
      },
    ],
    name: "StakeUnlocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "StakeWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasUsed",
        type: "uint256",
      },
    ],
    name: "UserOperationEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "revertReason",
        type: "bytes",
      },
    ],
    name: "UserOperationRevertReason",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "SIG_VALIDATION_FAILED",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initCode",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "paymasterAndData",
        type: "bytes",
      },
    ],
    name: "_validateSenderAndPaymaster",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "depositTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint112",
        name: "deposit",
        type: "uint112",
      },
      {
        internalType: "bool",
        name: "staked",
        type: "bool",
      },
      {
        internalType: "uint112",
        name: "stake",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
      {
        internalType: "uint48",
        name: "withdrawTime",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getDepositInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint112",
            name: "deposit",
            type: "uint112",
          },
          {
            internalType: "bool",
            name: "staked",
            type: "bool",
          },
          {
            internalType: "uint112",
            name: "stake",
            type: "uint112",
          },
          {
            internalType: "uint32",
            name: "unstakeDelaySec",
            type: "uint32",
          },
          {
            internalType: "uint48",
            name: "withdrawTime",
            type: "uint48",
          },
        ],
        internalType: "struct IStakeManager.DepositInfo",
        name: "info",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initCode",
        type: "bytes",
      },
    ],
    name: "getSenderAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "getUserOpHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "initCode",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "paymasterAndData",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
              },
            ],
            internalType: "struct UserOperation[]",
            name: "userOps",
            type: "tuple[]",
          },
          {
            internalType: "contract IAggregator",
            name: "aggregator",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.UserOpsPerAggregator[]",
        name: "opsPerAggregator",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "handleAggregatedOps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation[]",
        name: "ops",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "handleOps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "paymaster",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
            ],
            internalType: "struct EntryPoint.MemoryUserOp",
            name: "mUserOp",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "userOpHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "contextOffset",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
        ],
        internalType: "struct EntryPoint.UserOpInfo",
        name: "opInfo",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
    ],
    name: "innerHandleOp",
    outputs: [
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "op",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "targetCallData",
        type: "bytes",
      },
    ],
    name: "simulateHandleOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "simulateValidation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a0806040523462000084576101948181016001600160401b038111838210176200006e57829162004202833903906000f08015620000625760805260405161417890816200008a8239608051818181610ea601528181612b900152612dea0152f35b6040513d6000823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b600080fdfe60806040526004361015610023575b361561001957600080fd5b610021613ca1565b005b60003560e01c80630396cb60146101335780631d7327561461012e5780631fad948c14610129578063205c2878146101245780634b1d7cf51461011f5780635287ce121461011a57806370a08231146101155780638f41ec5a14610110578063957122ab1461010b5780639b249f6914610106578063a619353114610101578063b760faf9146100fc578063bb9fe6bf146100f7578063c23a5cea146100f2578063d6383f94146100ed578063ee219423146100e85763fc7e286d0361000e5761147d565b6112e1565b6111bd565b6110a3565b610fa0565b610f80565b610f60565b610e44565b610cdf565b610cc3565b610c72565b610b5d565b610898565b61078c565b61058e565b610418565b60203660031901126102705760043563ffffffff8116808203610270573360009081526020819052604090207fa5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c019161026b916101b99091610195811515613d75565b6101b26101a9600185015463ffffffff1690565b63ffffffff1690565b1115613dc1565b549261024d6001600160701b03946102276101d934888460781c16611883565b966101e5881515613e0d565b6101f181891115613e4e565b61020e816101fd610316565b941684906001600160701b03169052565b6001602084015287166001600160701b03166040830152565b63ffffffff83166060820152600060808201819052338152602081905260409020613e8b565b6040805194855263ffffffff90911660208501523393918291820190565b0390a2005b600080fd5b634e487b7160e01b600052604160045260246000fd5b60a081019081106001600160401b038211176102a657604052565b610275565b61010081019081106001600160401b038211176102a657604052565b6001600160401b0381116102a657604052565b606081019081106001600160401b038211176102a657604052565b90601f801991011681019081106001600160401b038211176102a657604052565b604051906103238261028b565b565b6040519060c082018281106001600160401b038211176102a657604052565b60405190604082018281106001600160401b038211176102a657604052565b6001600160401b0381116102a657601f01601f191660200190565b92919261038a82610363565b9161039860405193846102f5565b829481845281830111610270578281602093846000960137010152565b6001600160a01b0381160361027057565b60243590610323826103b5565b60c43590610323826103b5565b3590610323826103b5565b9181601f84011215610270578235916001600160401b038311610270576020838186019501011161027057565b34610270576101c0366003190112610270576001600160401b0360043581811161027057366023820112156102705761045b90369060248160040135910161037e565b9036602319016101808112610270576101006040519161047a8361028b565b126102705760405161048b816102ab565b6104936103c6565b815260443560208201526064356040820152608435606082015260a43560808201526104bd6103d3565b60a082015260e43560c08201526101043560e082015281526101243560208201526101443560408201526101643560608201526101843560808201526101a43591821161027057610531926105196105219336906004016103eb565b929091611d93565b6040519081529081906020820190565b0390f35b906040600319830112610270576004356001600160401b039283821161027057806023830112156102705781600401359384116102705760248460051b8301011161027057602401919060243561058b816103b5565b90565b346102705761059c36610535565b6105a7829392611579565b60005b8481106105f9575060009283915b8583106105c957610021858561164b565b9091936001906105ef6105dd8789876115f8565b6105e788866115df565b51908861198f565b01940191906105b8565b61062461061d61060b838597956115df565b516106178489876115f8565b84612446565b919061228e565b6001600160a01b0392918316610746576106f7576106419061228e565b91166106b157610656576001019290926105aa565b60408051631101335b60e11b815260048101929092526024820152602160448201527f41413332207061796d61737465722065787069726564206f72206e6f742064756064820152606560f81b608482015260a490fd5b0390fd5b60408051631101335b60e11b8152600481018490526024810191909152601460448201527320a0999a1039b4b3b730ba3ab9329032b93937b960611b6064820152608490fd5b60408051631101335b60e11b8152600481018590526024810191909152601760448201527f414132322065787069726564206f72206e6f74206475650000000000000000006064820152608490fd5b60408051631101335b60e11b8152600481018690526024810191909152601460448201527320a0991a1039b4b3b730ba3ab9329032b93937b960611b6064820152608490fd5b34610270576040366003190112610270576004356107a9816103b5565b602435906000913383528260205260408320916001600160701b038354168083116108535784838194936107fb610850976107f56107e986988798611871565b6001600160701b031690565b906126ff565b604080516001600160a01b03831681526020810184905233917fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb91a26001600160a01b03165af161084a61161b565b506140c0565b80f35b60405162461bcd60e51b815260206004820152601960248201527f576974686472617720616d6f756e7420746f6f206c61726765000000000000006044820152606490fd5b34610270576108a636610535565b6000805b838210610a4f576108bb9150611579565b6000805b8481106109c157505060008093815b81811061090557610021868660007f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d8180a261164b565b61095c61091382848a611a91565b61093161092561092560208401611ae8565b6001600160a01b031690565b7f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d600080a280611ab3565b906000915b8083106109795750505061097490611a82565b6108ce565b909194976109b46109ae6109ba926109a88c8b6109a18261099b8e8b8d6115f8565b926115df565b519161198f565b90611883565b99611a82565b95611a82565b9190610961565b6109cc818688611a91565b60206109e46109db8380611ab3565b92909301611ae8565b6000926001600160a01b03909116905b828410610a0d5750505050610a0890611a82565b6108bf565b909192946109b481610a4285610a3b610a29610a47968d6115df565b51610a358c8b8a6115f8565b85612446565b908b612253565b611a82565b9291906109f4565b610a5a828587611a91565b90610a658280611ab3565b92610a7561092560208301611ae8565b916001600160a01b038316610a8d6001821415611af2565b610aae575b505050610aa891610aa291611883565b91611a82565b906108aa565b909592610ac760409996939998959897888101906116fd565b92908a3b156102705789938b918a51938492839263e3563a4f60e01b845260049e8f850193610af594611c47565b03815a93600094fa9081610b44575b50610b2e57865163086a9f7560e41b81526001600160a01b038a16818a0190815281906020010390fd5b9497509295509093509181610aa2610aa8610a92565b80610b51610b57926102c7565b80610cb8565b38610b04565b34610270576020366003190112610270576105316080600435610b7f816103b5565b60409182918251610b8f8161028b565b60009281848093528260208201528286820152826060820152015260018060a01b03168152806020522090610c1e65ffffffffffff6001835194610bd28661028b565b80546001600160701b038082168852607082901c60ff161515602089015260789190911c1685870152015463ffffffff8116606086015260201c16608084019065ffffffffffff169052565b5191829182919091608065ffffffffffff8160a08401956001600160701b03808251168652602082015115156020870152604082015116604086015263ffffffff6060820151166060860152015116910152565b3461027057602036600319011261027057600435610c8f816103b5565b60018060a01b0316600052600060205260206001600160701b0360406000205416604051908152f35b600091031261027057565b3461027057600036600319011261027057602060405160018152f35b346102705760603660031901126102705760046001600160401b03813581811161027057610d1090369084016103eb565b905060243591610d1f836103b5565b60443590811161027057610d3690369085016103eb565b929091159081610e3a575b50610ded576014821015610d77575b6106ad8360405191829162461bcd60e51b8352820160409060208152600060208201520190565b610d87610d9392610d8d92611f2d565b90611f3b565b60601c90565b3b15610da0573880610d50565b6106ad9060405191829162461bcd60e51b8352820160609060208152601b60208201527f41413330207061796d6173746572206e6f74206465706c6f796564000000000060408201520190565b6106ad8360405191829162461bcd60e51b8352820160609060208152601960208201527f41413230206163636f756e74206e6f74206465706c6f7965640000000000000060408201520190565b90503b1538610d41565b34610270576020366003190112610270576004356001600160401b03811161027057610e749036906004016103eb565b604051632b870d1b60e11b8152918291610e9191600484016120b3565b6001600160a01b0391602091849190038160007f000000000000000000000000000000000000000000000000000000000000000086165af1908115610f2257602492600092610ef2575b50604051633653dc0360e11b815291166004820152fd5b610f1491925060203d8111610f1b575b610f0c81836102f5565b81019061209e565b9038610edb565b503d610f02565b61184f565b90816101609103126102705790565b602060031982011261027057600435906001600160401b0382116102705761058b91600401610f27565b34610270576020610f78610f7336610f36565b611e9f565b604051908152f35b602036600319011261027057610021600435610f9b816103b5565b613d1f565b34610270576000806003193601126110a0573381528060205260408120600181019063ffffffff82541690811561106e5761102661100061103393610ff2610fed855460ff9060701c1690565b613f3f565b65ffffffffffff4216613f7f565b845469ffffffffffff000000001916602082901b69ffffffffffff000000001617909455565b805460ff60701b19169055565b60405165ffffffffffff91909116815233907ffa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a90602090a280f35b60405162461bcd60e51b815260206004820152600a6024820152691b9bdd081cdd185ad95960b21b6044820152606490fd5b80fd5b34610270576020366003190112610270576004356110c0816103b5565b33600090815260208190526040902061085090916111616110ef6107e985546001600160701b039060781c1690565b936110fb851515613f99565b6111476001820161113465ffffffffffff611120835465ffffffffffff9060201c1690565b1661112c811515613fdc565b421015614028565b805469ffffffffffffffffffff19169055565b80546dffffffffffffffffffffffffffff60781b19169055565b604080516001600160a01b03831681526020810185905233917fb7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda391a2600080808095819460018060a01b03165af16111b761161b565b50614074565b34610270576060366003190112610270576001600160401b03600435818111610270576111ee903690600401610f27565b602435916111fb836103b5565b604435908111610270576112166106ad9136906004016103eb565b61121e611516565b61122785612188565b61123a6112348287612329565b90613bbb565b9461124a82600092438452611890565b43825296606094919384926001600160a01b0383166112ad575b5050505060800151936112936040611285602084015165ffffffffffff1690565b92015165ffffffffffff1690565b90604051968796630116f59360e71b885260048801611cdc565b839550839496506112c76040949293945180948193611cce565b03925af19060806112d661161b565b929190388080611264565b34610270576112ef36610f36565b6112f7611516565b61130082612188565b61130a8183612329565b825160a0015191939161132a906001600160a01b0316613c61565b613c61565b835151909190611342906001600160a01b0316613c61565b9461134b611f04565b5061137a61135e604095868101906116fd565b906000601483106114755750610d8761132592610d8d92611f2d565b9161138491613bbb565b8051608086015185870151602084015191976001600160a01b039093169360018514938593909190899065ffffffffffff1691015165ffffffffffff169160600151926113cf610325565b9a8b5260208b0152841515898b015265ffffffffffff1660608a015265ffffffffffff16608089015260a08801521515908161146c575b5061142757506106ad925194859463e0cff05f60e01b865260048601612044565b91906106ad9361143684613c61565b611450611441610344565b6001600160a01b039096168652565b602085015251633ebb2d3960e21b815295869560048701611fbd565b90501538611406565b915050613c61565b346102705760203660031901126102705760043561149a816103b5565b60018060a01b0316600052600060205260a0604060002065ffffffffffff60018254920154604051926001600160701b0390818116855260ff8160701c161515602086015260781c16604084015263ffffffff8116606084015260201c166080820152f35b6001600160401b0381116102a65760051b60200190565b604051906115238261028b565b604051608083611532836102ab565b60009283815283602082015283604082015283606082015283838201528360a08201528360c08201528360e082015281528260208201528260408201528260608201520152565b90611583826114ff565b61159060405191826102f5565b82815280926115a1601f19916114ff565b019060005b8281106115b257505050565b6020906115bd611516565b828285010152016115a6565b634e487b7160e01b600052603260045260246000fd5b80518210156115f35760209160051b010190565b6115c9565b91908110156115f35760051b8101359061015e1981360301821215610270570190565b3d15611646573d9061162c82610363565b9161163a60405193846102f5565b82523d6000602084013e565b606090565b6001600160a01b031680156116b857600080809381935af161166b61161b565b501561167357565b60405162461bcd60e51b815260206004820152601f60248201527f41413931206661696c65642073656e6420746f2062656e6566696369617279006044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f4141393020696e76616c69642062656e656669636961727900000000000000006044820152606490fd5b903590601e198136030182121561027057018035906001600160401b0382116102705760200191813603831361027057565b90816020910312610270575190565b908060209392818452848401376000828201840152601f01601f1916010190565b60005b8381106117725750506000910152565b8181015183820152602001611762565b9060209161179b8151809281855285808601910161175f565b601f01601f1916010190565b906117c160809161058b96946101c080865285019161173e565b9360e0815160018060a01b0380825116602087015260208201516040870152604082015160608701526060820151858701528482015160a087015260a08201511660c086015260c081015182860152015161010084015260208101516101208401526040810151610140840152606081015161016084015201516101808201526101a0818403910152611782565b6040513d6000823e3d90fd5b634e487b7160e01b600052601160045260246000fd5b9190820391821161187e57565b61185b565b9190820180921161187e57565b905a918160206118a960608301519360608101906116fd565b906118c9856040519586948594630eb993ab60e11b8652600486016117a7565b03816000305af16000918161195f575b50611958575060206000803e60005163deaddead60e01b146119175761191161190661058b945a90611871565b608084015190611883565b916134fe565b60408051631101335b60e11b8152600060048201526024810191909152600f60448201526e41413935206f7574206f662067617360881b6064820152608490fd5b9250505090565b61198191925060203d8111611988575b61197981836102f5565b81019061172f565b90386118d9565b503d61196f565b909291925a938060206119ab60608301519460608101906116fd565b906119cb866040519586948594630eb993ab60e11b8652600486016117a7565b03816000305af160009181611a62575b50611a5b575060206000803e60005163deaddead60e01b14611a1a57611a14611a0961058b95965a90611871565b608083015190611883565b9261372e565b60408051631101335b60e11b8152600481018590526024810191909152600f60448201526e41413935206f7574206f662067617360881b6064820152608490fd5b9450505050565b611a7b91925060203d81116119885761197981836102f5565b90386119db565b600019811461187e5760010190565b91908110156115f35760051b81013590605e1981360301821215610270570190565b903590601e198136030182121561027057018035906001600160401b03821161027057602001918160051b3603831361027057565b3561058b816103b5565b15611af957565b60405162461bcd60e51b815260206004820152601760248201527f4141393620696e76616c69642061676772656761746f720000000000000000006044820152606490fd5b9035601e19823603018112156102705701602081359101916001600160401b03821161027057813603831361027057565b61058b91611b8d81611b80846103e0565b6001600160a01b03169052565b60208201356020820152611c28611bd9611bbe611bad6040860186611b3e565b61016080604088015286019161173e565b611bcb6060860186611b3e565b90858303606087015261173e565b6080840135608084015260a084013560a084015260c084013560c084015260e084013560e08401526101008085013590840152610120611c1b81860186611b3e565b918584039086015261173e565b91611c396101409182810190611b3e565b92909181850391015261173e565b949391929083604087016040885252606086019360608160051b8801019482600090815b848310611c8a5750505050505084602061058b9596850391015261173e565b909192939497605f198b8203018552883561015e1984360301811215611cca5760019184611cb89201611b6f565b98602090810196950193019190611c6b565b8280fd5b908092918237016000815290565b92909361058b96959260c0958552602085015265ffffffffffff8092166040850152166060830152151560808201528160a08201520190611782565b15611d1f57565b60405162461bcd60e51b815260206004820152601760248201527f4141393220696e7465726e616c2063616c6c206f6e6c790000000000000000006044820152606490fd5b90604061058b92600081528160208201520190611782565b60409061058b939281528160208201520190611782565b909291925a93611da4303314611d18565b8151946040860151955a611388606083015189010111611e8e5761058b966000958051611deb575b50505090611de5915a900360808401510194369161037e565b91613902565b8251611e0992611e059290916001600160a01b0316614101565b1590565b611e15575b8080611dcc565b611de592919450611e24614113565b8051611e37575b50506001939091611e0e565b602085810151835193909101516040516001600160a01b039094169391927f1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a20192918291611e849183611d7c565b0390a33880611e2b565b63deaddead60e01b60005260206000fd5b80611eae6101408201826116fd565b5003601f198101604051918201604052808252602082019283375190206040516020810191825230604082015246606082015260608152608081018181106001600160401b038211176102a65760405251902090565b60405190604082018281106001600160401b038211176102a65760405260006020838281520152565b906014116102705790601490565b6bffffffffffffffffffffffff199035818116939260148110611f5d57505050565b60140360031b82901b16169150565b9060c060a061058b93805184526020810151602085015260408101511515604085015265ffffffffffff80606083015116606086015260808201511660808501520151918160a08201520190611782565b929461201e6103239561200c610100959998611ffa611fe6602097610140808c528b0190611f6c565b9b878a019060208091805184520151910152565b80516060890152602001516080880152565b805160a08701526020015160c0860152565b80516001600160a01b031660e08501520151805191909201908152602091820151910152565b61208d6103239461207b61206660a0959998969960e0865260e0860190611f6c565b98602085019060208091805184520151910152565b80516060840152602001516080830152565b019060208091805184520151910152565b90816020910312610270575161058b816103b5565b91602061058b93818152019161173e565b906120de9061058b9694959360608452606084019161173e565b6001600160a01b03909416602082015280840360409091015261173e565b60009060033d1161210957565b905060046000803e60005160e01c90565b600060443d1061058b57604051600319913d83016004833e81516001600160401b03918282113d6024840111176121775781840194855193841161217f573d85010160208487010111612177575061058b929101602001906102f5565b949350505050565b50949350505050565b61219560408201826116fd565b6121ad6121a184611ae8565b936101208101906116fd565b9290303b15610270576000936121d891604051968795869563957122ab60e01b8752600487016120c4565b0381305afa9081612240575b506103235760016121f36120fc565b6308c379a014612204575b610f2257565b61220c61211a565b80612218575b506121fe565b8051600092501561221257604051631101335b60e11b81529081906106ad9060048301611d64565b80610b5161224d926102c7565b386121e4565b92919061225f9061228e565b6001600160a01b03939091841690841603610746576106f7576122819061228e565b91166106b1576106565750565b80156122d45761229d90613b6d565b65ffffffffffff8060408301511642119081156122c4575b5090516001600160a01b031691565b90506020820151164210386122b5565b50600090600090565b156122e457565b60405162461bcd60e51b815260206004820152601860248201527f41413934206761732076616c756573206f766572666c6f7700000000000000006044820152606490fd5b916000915a9381519061233c82826125b1565b61234581611e9f565b602084015261237b6001600160781b0360808401516060850151176040850151176101008401359060e0850135171711156122dd565b61238482612659565b61238f81858461271a565b979061239a43600052565b60a09490940151606094906001600160a01b031661242c575b505a810360a0840135106123dd5760809360c092604087015260608601525a900391013501910152565b60408051631101335b60e11b8152600060048201526024810191909152601e60448201527f41413430206f76657220766572696669636174696f6e4761734c696d697400006064820152608490fd5b9093508161243d92975085846130dd565b959092386123b3565b9290916000925a825161245981846125b1565b61246283611e9f565b60208501526124986001600160781b0360808301516060840151176040840151176101008601359060e0870135171711156122dd565b6124a181612659565b6124ad8186868b61297b565b98906124b843600052565b60a09390930151606093906001600160a01b031661254a575b505a840360a0860135106124fd5750604085015260608401526080919060c0905a900391013501910152565b60408051631101335b60e11b815260048101929092526024820152601e60448201527f41413430206f76657220766572696669636174696f6e4761734c696d697400006064820152608490fd5b9092508161255c9298508686856132ac565b969091386124d1565b1561256c57565b60405162461bcd60e51b815260206004820152601d60248201527f4141393320696e76616c6964207061796d6173746572416e64446174610000006044820152606490fd5b612616906125ce6125c182611ae8565b6001600160a01b03168452565b602081013560208401526080810135604084015260a0810135606084015260c0810135608084015260e081013560c084015261010081013560e08401526101208101906116fd565b90811561264e57612640610d8d610d878460a09461263b601461032399981015612565565b611f2d565b6001600160a01b0316910152565b505060a06000910152565b60a08101516001600160a01b03161561268e5760c060035b60ff60408401519116606084015102016080830151019101510290565b60c06001612671565b6126af60409295949395606083526060830190611b6f565b9460208201520152565b90610323602f60405180946e020a09919903932bb32b93a32b21d1608d1b60208301526126ef815180926020868601910161175f565b810103600f8101855201836102f5565b906001600160701b03166001600160701b0319825416179055565b916000926000925a936127a8602083519361273b855160018060a01b031690565b9561275361274c60408301836116fd565b9084612b3c565b60a08601516001600160a01b03169061276b43600052565b6001600160a01b0391821615968693849189612928575b6060015190860151604051633a871cdd60e01b8152978896879586939060048501612697565b03938a1690f1829181612908575b506128ff57506001906127c76120fc565b6308c379a0146128c4575b5061287c575b6127e5575b50505a900391565b6001600160a01b031660009081526020819052604090206128106107e982546001600160701b031690565b8083116128335761282c926001600160701b03910316906126ff565b38806127dd565b60408051631101335b60e11b8152600060048201526024810191909152601760448201527610504c8c48191a591b89dd081c185e481c1c99599d5b99604a1b6064820152608490fd5b60408051631101335b60e11b815260006004820152602481019190915260166044820152754141323320726576657274656420286f72204f4f472960501b6064820152608490fd5b6128cc61211a565b90816128d857506127d2565b6106ad916128e691506126b9565b604051631101335b60e11b815291829160048301611d64565b95506127d89050565b61292191925060203d81116119885761197981836102f5565b90386127b6565b94506129596107e961294c8c60018060a01b03166000526000602052604060002090565b546001600160701b031690565b8b8111156129705750856060835b96915050612782565b606087918d03612967565b90926000936000935a946129b6602083519361299d855160018060a01b031690565b956127536129ae60408301836116fd565b90848c612d93565b03938a1690f1829181612b1c575b50612b1357506001906129d56120fc565b6308c379a014612ad6575b50612a8e575b6129f4575b5050505a900391565b6001600160a01b0316600090815260208190526040902091612a206107e984546001600160701b031690565b90818311612a475750612a3f92916001600160701b03910316906126ff565b3880806129eb565b60408051631101335b60e11b815260048101929092526024820152601760448201527610504c8c48191a591b89dd081c185e481c1c99599d5b99604a1b6064820152608490fd5b60408051631101335b60e11b815260048101869052602481019190915260166044820152754141323320726576657274656420286f72204f4f472960501b6064820152608490fd5b612ade61211a565b9081612aea57506129e0565b8691612af691506126b9565b604051631101335b60e11b81529182916106ad9160048401611d7c565b96506129e69050565b612b3591925060203d81116119885761197981836102f5565b90386129c4565b909180612b4857505050565b8151516001600160a01b031692833b612d4457825160600151604051632b870d1b60e11b81529060208280612b818787600484016120b3565b0381600060018060a01b0395867f00000000000000000000000000000000000000000000000000000000000000001690f1918215610f2257600092612d24575b50808216958615612cd55716809503612c86573b15612c3757610d8d610d877fd51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d93612c0b93611f2d565b602083810151935160a00151604080516001600160a01b039485168152939091169183019190915290a3565b60408051631101335b60e11b8152600060048201526024810191909152602060448201527f4141313520696e6974436f6465206d757374206372656174652073656e6465726064820152608490fd5b60408051631101335b60e11b8152600060048201526024810191909152602060448201527f4141313420696e6974436f6465206d7573742072657475726e2073656e6465726064820152608490fd5b60408051631101335b60e11b8152600060048201526024810191909152601b60448201527f4141313320696e6974436f6465206661696c6564206f72204f4f4700000000006064820152608490fd5b612d3d91925060203d8111610f1b57610f0c81836102f5565b9038612bc1565b60408051631101335b60e11b8152600060048201526024810191909152601f60448201527f414131302073656e64657220616c726561647920636f6e7374727563746564006064820152608490fd5b92909181612da2575b50505050565b8251516001600160a01b031693843b612fa457835160600151604051632b870d1b60e11b81529060208280612ddb8888600484016120b3565b0381600060018060a01b0395867f00000000000000000000000000000000000000000000000000000000000000001690f1918215610f2257600092612f84575b50808216968715612f355716809603612ee6573b15612e995750610d8d610d877fd51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d93612e6693611f2d565b602083810151935160a00151604080516001600160a01b039485168152939091169183019190915290a338808080612d9c565b60408051631101335b60e11b815260048101929092526024820152602060448201527f4141313520696e6974436f6465206d757374206372656174652073656e6465726064820152608490fd5b60408051631101335b60e11b8152600481018490526024810191909152602060448201527f4141313420696e6974436f6465206d7573742072657475726e2073656e6465726064820152608490fd5b60408051631101335b60e11b8152600481018690526024810191909152601b60448201527f4141313320696e6974436f6465206661696c6564206f72204f4f4700000000006064820152608490fd5b612f9d91925060203d8111610f1b57610f0c81836102f5565b9038612e1b565b60408051631101335b60e11b815260048101929092526024820152601f60448201527f414131302073656e64657220616c726561647920636f6e7374727563746564006064820152608490fd5b15612ff857565b60405162461bcd60e51b815260206004820152601f60248201527f4141343120746f6f206c6974746c6520766572696669636174696f6e476173006044820152606490fd5b91906040838203126102705782516001600160401b0381116102705783019080601f830112156102705781519161307383610363565b9161308160405193846102f5565b83835260208483010111610270576020926130a19184808501910161175f565b92015190565b90610323602f60405180946e020a09999903932bb32b93a32b21d1608d1b60208301526126ef815180926020868601910161175f565b939192909360609460009460009382519361311160a08a87015196613103858911612ff1565b01516001600160a01b031690565b9161312e8360018060a01b03166000526000602052604060002090565b956131436107e988546001600160701b031690565b9185831061325d57602089976131696131899a6001600160701b038a8c980316906126ff565b0151604051637a32e3bf60e11b8152988997889687939060048501612697565b03946001600160a01b03169103f1908183918493613237575b506132305750506001906131b46120fc565b6308c379a01461320e575b506131c657565b60408051631101335b60e11b815260006004820152602481019190915260166044820152754141333320726576657274656420286f72204f4f472960501b6064820152608490fd5b61321661211a565b908161322257506131bf565b6106ad916128e691506130a7565b9450925050565b90925061325691503d8085833e61324e81836102f5565b81019061303d565b91386131a2565b60408051631101335b60e11b8152600060048201526024810191909152601e60448201527f41413331207061796d6173746572206465706f73697420746f6f206c6f7700006064820152608490fd5b9194929390936060956000956000938251906132d360a08b84015193613103848611612ff1565b936132f08560018060a01b03166000526000602052604060002090565b6133046107e982546001600160701b031690565b8781106133f857926020899795929361316989956001600160701b038c61332f9d9b990316906126ff565b03946001600160a01b03169103f19081839184936133da575b506133d257505060019061335a6120fc565b6308c379a0146133b3575b5061336d5750565b60408051631101335b60e11b81526004810192909252602482015260166044820152754141333320726576657274656420286f72204f4f472960501b6064820152608490fd5b6133bb61211a565b90816133c75750613365565b612af69250506130a7565b955093505050565b9092506133f191503d8085833e61324e81836102f5565b9138613348565b60408051631101335b60e11b8152600481018c90526024810191909152601e60448201527f41413331207061796d6173746572206465706f73697420746f6f206c6f7700006064820152608490fd5b6003111561345157565b634e487b7160e01b600052602160045260246000fd5b92919061348560409160028652606060208701526060860190611782565b930152565b93929190600381101561345157604091613485918652606060208701526060860190611782565b906103236036604051809475020a09a98103837b9ba27b8103932bb32b93a32b21d160551b60208301526134ee815180926020868601910161175f565b81010360168101855201836102f5565b929190925a9360009180519161351383613b26565b60a084018051909691946001600160a01b03939092918416808061363557505082516001600160a01b03169050985b5a900301938402976040840190898251106135e6577f49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f9461358c6020928c6135e195510390613caa565b0151948960206135b36135a5865160018060a01b031690565b9a516001600160a01b031690565b9401519785604051968796169a16988590949392606092608083019683521515602083015260408201520152565b0390a4565b60408051631101335b60e11b8152600060048201526024810191909152602060448201527f414135312070726566756e642062656c6f772061637475616c476173436f73746064820152608490fd5b9a918051613645575b5050613542565b6060850151600099509091803b1561372a57918991898361367f9560405180978196829563a9a2340960e01b84528c029060048401613467565b0393f19081613717575b506137125760016136986120fc565b6308c379a0146136f3575b6136af575b388061363e565b60408051631101335b60e11b8152600060048201526024810191909152601260448201527110504d4c081c1bdcdd13dc081c995d995c9d60721b6064820152608490fd5b6136fb61211a565b8061370657506136a3565b6128e66106ad916134b1565b6136a8565b80610b51613724926102c7565b38613689565b8980fd5b9392915a9060009280519061374282613b26565b60a083018051909791956001600160a01b03959092918616808061380b57505084516001600160a01b03169050915b5a9003019485029860408301908a8251106137be57507f49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f94939261358c6135e1938c602094510390613caa565b60408051631101335b60e11b815260048101929092526024820152602060448201527f414135312070726566756e642062656c6f772061637475616c476173436f73746064820152608490fd5b9391805161381b575b5050613771565b606087015160009a509091803b156138fe57918a918a836138559560405180978196829563a9a2340960e01b84528c029060048401613467565b0393f190816138eb575b506138e657600161386e6120fc565b6308c379a0146138c9575b613885575b3880613814565b60408051631101335b60e11b8152600481018d90526024810191909152601260448201527110504d4c081c1bdcdd13dc081c995d995c9d60721b6064820152608490fd5b6138d161211a565b806138dc5750613879565b612af68d916134b1565b61387e565b80610b516138f8926102c7565b3861385f565b8a80fd5b909392915a9480519161391483613b26565b60a084018051909691946001600160a01b039390929184169081806139dc57505082516001600160a01b03169050985b5a900301938402976040840190898251106135e6577f49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f9461398e6020928c6135e195510390613caa565b61399788613447565b0151948960206139b06135a5865160018060a01b031690565b940151604080519182529815602082015297880152606087015290821695909116939081906080820190565b9a9181516139ec575b5050613944565b8784026139f88a613447565b60028a14613a5c576060860151823b1561027057613a3293600080948d6040519788968795869363a9a2340960e01b85526004850161348a565b0393f18015610f2257613a49575b505b38806139e5565b80610b51613a56926102c7565b38613a40565b6060860151823b1561027057613a8e93600080948d6040519788968795869363a9a2340960e01b85526004850161348a565b0393f19081613b13575b50613b0e576001613aa76120fc565b6308c379a014613afb575b15613a425760408051631101335b60e11b8152600060048201526024810191909152601260448201527110504d4c081c1bdcdd13dc081c995d995c9d60721b6064820152608490fd5b613b0361211a565b806137065750613ab2565b613a42565b80610b51613b20926102c7565b38613a98565b60e060c0820151910151808214613b4a57480180821015613b45575090565b905090565b5090565b60405190613b5b826102da565b60006040838281528260208201520152565b613b75613b4e565b5065ffffffffffff808260a01c168015613bb4575b60405192613b97846102da565b6001600160a01b038116845260d01c602084015216604082015290565b5080613b8a565b613bd0613bd691613bca613b4e565b50613b6d565b91613b6d565b81516001600160a01b039081169291908315613c56575b65ffffffffffff928391826040816020850151169301511693836040816020840151169201511690808410613c4e575b50808511613c46575b5060405195613c34876102da565b16855216602084015216604082015290565b935038613c26565b925038613c1d565b815181169350613bed565b90613c6a611f04565b9160018060a01b0316600052600060205263ffffffff600160406000206001600160701b03815460781c1685520154166020830152565b61032333613d1f565b60018060a01b0316600052600060205260406000206001600160701b038082541692830180931161187e57808311613ce7576103239216906126ff565b60405162461bcd60e51b815260206004820152601060248201526f6465706f736974206f766572666c6f7760801b6044820152606490fd5b613d293482613caa565b60018060a01b03168060005260006020527f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c460206001600160701b0360406000205416604051908152a2565b15613d7c57565b60405162461bcd60e51b815260206004820152601a60248201527f6d757374207370656369667920756e7374616b652064656c61790000000000006044820152606490fd5b15613dc857565b60405162461bcd60e51b815260206004820152601c60248201527f63616e6e6f7420646563726561736520756e7374616b652074696d65000000006044820152606490fd5b15613e1457565b60405162461bcd60e51b81526020600482015260126024820152711b9bc81cdd185ad9481cdc1958da599a595960721b6044820152606490fd5b15613e5557565b60405162461bcd60e51b815260206004820152600e60248201526d7374616b65206f766572666c6f7760901b6044820152606490fd5b9065ffffffffffff6080600161032394613eaf6001600160701b03865116826126ff565b602085810151825460408801516dffffffffffffffffffffffffffff60781b60789190911b1660ff60701b92151560701b929092166effffffffffffffffffffffffffffff60701b19909116171782556060860151929091018054939095015169ffffffffffff000000009416901b9290921663ffffffff90921669ffffffffffffffffffff1990911617179055565b15613f4657565b60405162461bcd60e51b8152602060048201526011602482015270616c726561647920756e7374616b696e6760781b6044820152606490fd5b91909165ffffffffffff8080941691160191821161187e57565b15613fa057565b60405162461bcd60e51b81526020600482015260146024820152734e6f207374616b6520746f20776974686472617760601b6044820152606490fd5b15613fe357565b60405162461bcd60e51b815260206004820152601d60248201527f6d7573742063616c6c20756e6c6f636b5374616b6528292066697273740000006044820152606490fd5b1561402f57565b60405162461bcd60e51b815260206004820152601b60248201527f5374616b65207769746864726177616c206973206e6f742064756500000000006044820152606490fd5b1561407b57565b60405162461bcd60e51b815260206004820152601860248201527f6661696c656420746f207769746864726177207374616b6500000000000000006044820152606490fd5b156140c757565b60405162461bcd60e51b81526020600482015260126024820152716661696c656420746f20776974686472617760701b6044820152606490fd5b9060009283809360208451940192f190565b3d61080080821161413a575b50604051906020818301016040528082526000602083013e90565b90503861411f56fea2646970667358221220c0d468d02c2aeb8feb52f847a027bfe699f4ea338b74cd91ae89417210f5bbc864736f6c634300081300336080806040523461001657610178908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c63570e1a361461002857600080fd5b3461009e57602036600319011261009e5760043567ffffffffffffffff9182821161009e573660238301121561009e57816004013592831161009e57366024848401011161009e5761009a61008084602485016100b7565b6040516001600160a01b0390911681529081906020820190565b0390f35b80fd5b634e487b7160e01b600052604160045260246000fd5b90806014116101385767ffffffffffffffff91601319820183811161013d5760405193600b8401601f19908116603f011685019081118582101761013d5760405280845260208401903684840111610138576020946000600c819682946014880187378301015251923560601c5af190600051911561013257565b60009150565b600080fd5b6100a156fea2646970667358221220b9b244649c5aff2c444ebd7609ebcc8aaacca34ee824a528544c2b3a6bf01e6e64736f6c63430008130033";

type EntryPointConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EntryPointConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EntryPoint__factory extends ContractFactory {
  constructor(...args: EntryPointConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EntryPoint> {
    return super.deploy(overrides || {}) as Promise<EntryPoint>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EntryPoint {
    return super.attach(address) as EntryPoint;
  }
  override connect(signer: Signer): EntryPoint__factory {
    return super.connect(signer) as EntryPoint__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EntryPointInterface {
    return new utils.Interface(_abi) as EntryPointInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EntryPoint {
    return new Contract(address, _abi, signerOrProvider) as EntryPoint;
  }
}
