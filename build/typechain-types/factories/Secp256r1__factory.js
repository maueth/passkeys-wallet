/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { utils, Contract, ContractFactory } from "ethers";
const _abi = [
    {
        inputs: [],
        name: "nn",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "pp",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x608080604052346100195760ce908161001f823930815050f35b600080fdfe6080806040526004361015601257600080fd5b600090813560e01c90816372a4c30f14606057506391327ec614603457600080fd5b80600319360112605d576040516ffffffffeffffffffffffffffffffffff60601b198152602090f35b80fd5b905081600319360112609457807fffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc63255160209252f35b5080fdfea26469706673582212207b7ba747cf8b48c684fe3f278466bf4616c1bbd6d13b80c91dd1657d5d1b9bcc64736f6c63430008130033";
const isSuperArgs = (xs) => xs.length > 1;
export class Secp256r1__factory extends ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    }
}
Secp256r1__factory.bytecode = _bytecode;
Secp256r1__factory.abi = _abi;
